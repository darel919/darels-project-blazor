@page "/"
@inject NavigationManager Navigation

<PageTitle>darel's Project Home</PageTitle>
<HeadContent>
    <meta name=”robots” content="index, follow">
    <meta name="type" content="website">
    <meta name="og:title" content="darel's Video Project">
    <meta name="description" content="Watch all of my archived video works on darel's Project">
    <meta name="og:description" content="Watch all of my archived video works on darel's Project">
    <meta name="twitter:title" content="darel's Video Project">
    <meta name="twitter:description" content="Watch all of my archived video works on darel's Project">
</HeadContent>

@if(!isLoading && fetchedVideos != null) {
    <header>
        <h1>Welcome to darel's Projects</h1>
        <h5>@fetchedVideos.Count videos total</h5>
        <h6>What do you want to watch today?</h6>
    </header>
    @foreach (var video in fetchedVideos) {
        <a href="/watch?v=@video.content_id">
            <div class="videoPage" title="@video.title">
                @if(@video.thumbnail != null) {
                    <img class="imgThumbnail" loading="lazy" src="@API/@video.thumbnail" alt="Thumbnail" width=200/>
                } else {
                    <img class="imgThumbnail" loading="lazy" src="@API/dp/thumb?id=@video.content_id" alt="Thumbnail" width=200/>
                }
                
                <div class="videoPage-content">
                    <h1>@video.title</h1>
                    <h6>Recorded at: @video.created_at</h6>
                    @if(video.total_views > 0) {
                        <h6>@video.total_views views</h6>
                    } else {
                        <h6>No views</h6>
                    }
                </div>
            </div>
        </a>
    }
} else if(isLoading) {
    <FluentProgressRing></FluentProgressRing>
    <h1>Loading content...</h1>
} else if(!string.IsNullOrEmpty(errorMessage)) {
    <div class="errorLoad">
        <h2>Oops!</h2>
        <h5>There was a problem while we trying to contact the server. Sorry for that!</h5>
        <h6>Error:<br> @errorMessage</h6>
    </div>
}

@code {
    private readonly string API = "https://api.darelisme.my.id";
    private readonly HttpClient httpClient = new HttpClient();
    private bool isLoading = true;
    private string errorMessage;
    public List<FetchedData> fetchedVideos;

    public class Thumbnail {
        public string url { get; set; }
    }

    public class YTData {
        public string title { get; set; }
        public List<Thumbnail> videoThumbnails { get; set; }
    }

    public class FetchedData {
        public DateTime created_at { get; set; }
        public string content_id { get; set; }
        public string type_id { get; set; }
        public YTData ytData { get; set; }
        public string title {get; set;}
        public string thumbnail {get; set;}
        public int total_views { get; set; }
    }

    protected override async Task OnInitializedAsync() {
        isLoading = true;
        try {
            var response = await httpClient.GetAsync("http://10.10.10.10:328/dp?sortBy=desc");
            if (response.IsSuccessStatusCode) {
                var responseContent = await response.Content.ReadAsStringAsync();
                fetchedVideos = System.Text.Json.JsonSerializer.Deserialize<List<FetchedData>>(responseContent);
                isLoading = false;
            }
            isLoading = false;
        } catch (Exception ex) {
            isLoading = false;
            errorMessage = $"{ex.Message}";
        }
    }
}
